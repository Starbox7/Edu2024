plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'

	id 'com.moowork.node' version '1.3.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.postgresql:postgresql'

	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

node {
    version = '14.17.0'
    npmVersion = '6.14.13'
    download = true
    workDir = file("${project.projectDir}/src/main/frontend")
    nodeModulesDir = file("${project.projectDir}/src/main/frontend")
}

task buildReact(type: NpmTask) {
    args = ['run', 'build']
    execOverrides {
        it.workingDir = 'src/main/frontend'
    }
}

build.dependsOn buildReact

tasks.named('test') {
	useJUnitPlatform()
}
